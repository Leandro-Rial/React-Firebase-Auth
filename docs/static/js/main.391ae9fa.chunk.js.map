{"version":3,"sources":["firebase.js","context/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","router/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","useContext","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","handleLogout","pushState","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391ae9fa.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app;","import React, { useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n  \r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n  \r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      { !loading && children }\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Signup = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  const { signup } = useContext(AuthContext);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      history.push('/login')\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mt-2\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mt-2\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\" className=\"mt-2\">\r\n              <Form.Label>Password Confirm</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100 mt-5\" type=\"submit\" disabled={loading}>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"login\">Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Alert, Button, Card } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport const Dashboard = () => {\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const { currentUser, logout } = useContext(AuthContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = async () => {\r\n        setError(\"\")\r\n\r\n        try {\r\n            \r\n            await logout();\r\n\r\n            history.pushState('/login')\r\n\r\n        } catch {\r\n            setError('Failed to LogOut')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\" >Update Profile</Link>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push('/')\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mt-2\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mt-2\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100 mt-5\" type=\"submit\" disabled={loading}>\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: Component, rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\r\n      }}\r\n    ></Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst ForgotPassword = () => {\r\n  const emailRef = useRef();\r\n\r\n  const { resetPassword } = useContext(AuthContext);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        setMessage('')\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for futher instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mt-2\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100 mt-5\" type=\"submit\" disabled={loading}>\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"login\">Log In</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst UpdateProfile = () => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  const { currentUser, updateEmail, updatePassword } = useContext(AuthContext);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Filed to create account\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mt-2\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                defaultValue={currentUser.email}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mt-2\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\" className=\"mt-2\">\r\n              <Form.Label>Password Confirm</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} />\r\n            </Form.Group>\r\n            <Button\r\n              className=\"w-100 mt-5\"\r\n              type=\"submit\"\r\n              placeholder=\"Leave to keep the same\"\r\n              disabled={loading}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Signup from './components/Signup';\nimport { AuthProvider } from './context/AuthContext';\nimport { Container } from 'react-bootstrap';\nimport { Dashboard } from './components/Dashboard';\nimport Login from './components/Login';\nimport PrivateRoute from './router/PrivateRoute';\nimport ForgotPassword from './components/ForgotPassword';\nimport UpdateProfile from './components/UpdateProfile';\n\nconst App = () => {\n  return (\n    <Container\n    className=\"d-flex align-items-center justify-content-center\"\n    style={{ minHeight: \"100vh\" }}\n    >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Router>\n            <AuthProvider>\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\n                <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/forgot-password\" component={ForgotPassword} />\n              </Switch>\n            </AuthProvider>\n          </Router>\n        </div>\n      </Container>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}